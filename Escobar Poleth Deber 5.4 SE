/*
 * CAPÍTULO 5: FUNCIONES ESPECÍFICAS
 * PROGRAMA 25: Creación de funciones en RTOS
 * OBJETIVO: Ejecutar tareas directamente en el Kernel del uC.
 *NOMBRE: Escobar Poletgh
 */
 
#include <Arduino_FreeRTOS.h> // librería de RTOS
// LEDS EN ARDUINO PARA SIMULACIÓN DE PROCESOS
 
#define RED 8
#define YELLOW 7
#define BLUE 6
//objeto del gestor tareas
typedef int TaskProfiler;
//definir las tareas
TaskProfiler redLEDProfiler;
TaskProfiler yellowLEDProfiler;
TaskProfiler blueLEDProfiler;
//------------------------------------------------------------------------------------------------------
void setup() {
Serial.begin(9600);
Serial.println("El funcionamiento del semáforo es el siguiente: ");
Serial.println("       Verde:   Autos pasan ON 10S");
Serial.println("       Naranja: Autos advertencia a parar ON 5S");
Serial.println("       Rojo:    Autos paran ON 10S");
//crear las rutinas de cada tarea
xTaskCreate(yellowLedControllerTask,"Yellow LED Task",100,NULL,1,NULL); //rutina,nombre,memoria,NULL,prioridad,NULL
xTaskCreate(redLedControllerTask,"Red LED Task",100,NULL,3,NULL); //rutina,nombre,memoria,NULL,prioridad,NULL
xTaskCreate(blueLedControllerTask,"Blue LED Task",100,NULL,2,NULL); //rutina,nombre,memoria,NULL,prioridad,NULL

vTaskStartScheduler (); 
}
//------------------------------------------------------------------------------------------------------


void yellowLedControllerTask (void *pvParameters){
 pinMode(7,OUTPUT);
 while(1){
      digitalWrite(7, LOW);    
    vTaskDelay( 10000 / portTICK_PERIOD_MS ); 
    digitalWrite(7, HIGH);   
    vTaskDelay( 5000 / portTICK_PERIOD_MS ); 
    digitalWrite(7, LOW);    
    vTaskDelay( 20000 / portTICK_PERIOD_MS );
    digitalWrite(7, HIGH); 
    vTaskDelay( 5000 / portTICK_PERIOD_MS ); 
         
     }
  } 
  void blueLedControllerTask (void *pvParameters){
 pinMode(BLUE,OUTPUT);
  while(2){
     digitalWrite(6, HIGH);   
    vTaskDelay( 10000 / portTICK_PERIOD_MS ); 
    digitalWrite(6, LOW);    
    vTaskDelay( 15000 / portTICK_PERIOD_MS );      
    } 
 }

void redLedControllerTask(void *pvParameters){//tarea 1
  pinMode(RED,OUTPUT);
  while(3){
    digitalWrite(8, LOW);    //Los mismos pines les pones en alto ya bajo?
    vTaskDelay( 15000 / portTICK_PERIOD_MS ); 
    digitalWrite(8, HIGH);   
    vTaskDelay( 10000 / portTICK_PERIOD_MS ); 
    digitalWrite(8, LOW);    
    vTaskDelay( 15000 / portTICK_PERIOD_MS ); 
    digitalWrite(8, HIGH);   
    vTaskDelay( 10000 / portTICK_PERIOD_MS );    
    }
}

void loop() {
}
